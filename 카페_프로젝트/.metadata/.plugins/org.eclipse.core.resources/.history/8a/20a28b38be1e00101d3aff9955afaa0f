package com.Cafe.Controller;

import com.Cafe.dao.CoffeeBeansDAO;
import com.Cafe.model.COFFEE_BEANS;

import java.util.List;
import java.util.stream.Collectors;

public class CoffeeBeansController {
    private final CoffeeBeansDAO coffeeBeansDAO;

    public CoffeeBeansController() {
        this.coffeeBeansDAO = new CoffeeBeansDAO();
    }

    // 전체 조회
    public List<COFFEE_BEANS> getAllCoffeeBeans() {
        return coffeeBeansDAO.getAllCoffeeBeans();
    }

    // ID 조회
    public COFFEE_BEANS getCoffeeBeanById(int id) {
        return coffeeBeansDAO.getCoffeeBeanById(id);
    }

    // 추가
    public boolean addCoffeeBean(COFFEE_BEANS bean) {
        if (bean.getName() == null || bean.getName().trim().isEmpty()) {
            return false;
        }
        if (coffeeBeansDAO.getCoffeeBeanById(bean.getId()) != null) {
            return false;
        }
        return coffeeBeansDAO.insertCoffeeBean(bean);
    }

    // 수정
    public boolean updateCoffeeBean(COFFEE_BEANS bean) {
        if (bean.getName() == null || bean.getName().trim().isEmpty()) {
            return false;
        }
        if (coffeeBeansDAO.getCoffeeBeanById(bean.getId()) == null) {
            return false;
        }
        return coffeeBeansDAO.updateCoffeeBean(bean);
    }

    // 삭제
    public boolean deleteCoffeeBean(int id) {
        if (coffeeBeansDAO.getCoffeeBeanById(id) == null) {
            return false;
        }
        return coffeeBeansDAO.deleteCoffeeBean(id);
    }

    // 이름으로 검색
    public List<COFFEE_BEANS> searchCoffeeBeansByName(String keyword) {
        return coffeeBeansDAO.getAllCoffeeBeans().stream()
            .filter(bean -> bean.getName().toLowerCase().contains(keyword.toLowerCase()))
            .collect(Collectors.toList());
    }

    // 로스팅 타입으로 조회
    public List<COFFEE_BEANS> getCoffeeBeansByRoasting(String roastingType) {
        return coffeeBeansDAO.getAllCoffeeBeans().stream()
            .filter(bean -> bean.getRoasting().equalsIgnoreCase(roastingType))
            .collect(Collectors.toList());
    }
}
