package com.Cafe.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.Cafe.model.Customer;

public class CustomerDAO {

	// DB 접속 정보 (Oracle XE, 사용자: C##Cafe_Website)
	private final String url = "jdbc:oracle:thin:@localhost:1521:xe";
	private final String user = "C##Cafe_Website";
	private final String password = "1234";

	// DB 연결 메서드 (Connection 객체를 반환)
	private Connection getConnection() throws SQLException {
		return DriverManager.getConnection(url, user, password);
	}

	// 고객 등록 메서드
	public void insert(Customer customer) {
		String sql = "INSERT INTO CUSTOMER (customer_id, name, phone, email, address, signup_date) "
				+ "VALUES (customer_seq.NEXTVAL, ?, ?, ?, ?, TO_DATE(?, 'YYYY-MM-DD'))";

		try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
			// ?에 순서대로 값 세팅
			ps.setString(1, customer.getName());
			ps.setString(2, customer.getPhone());
			ps.setString(3, customer.getEmail());
			ps.setString(4, customer.getAddress());
			ps.setString(5, customer.getSignupDate()); // 문자열 날짜를 TO_DATE로 변환하여 삽입

			ps.executeUpdate(); // 쿼리 실행 (INSERT)
		} catch (SQLException e) {
			e.printStackTrace(); // 오류 출력
		}
	}

	// 모든 고객 정보 조회 메서드
	public List<Customer> getAll() {
		List<Customer> list = new ArrayList<>(); // 결과를 담을 리스트
		String sql = "SELECT customer_id, name, phone, email, address, signup_date FROM CUSTOMER";

		try (Connection conn = getConnection(); // DB 연결
				Statement stmt = conn.createStatement(); // 일반 Statement 사용
				ResultSet rs = stmt.executeQuery(sql) // 쿼리 실행 후 결과 저장
		) {
			while (rs.next()) {
				// 날짜가 null이 아닐 경우 문자열로 변환
				String signupDate = (rs.getDate("signup_date") != null) ? rs.getDate("signup_date").toString() : null;

				// 한 명의 고객 정보 생성
				Customer customer = new Customer(rs.getInt("customer_id"), rs.getString("name"), rs.getString("phone"),
						rs.getString("email"), rs.getString("address"), signupDate);

				list.add(customer); // 리스트에 추가
			}
		} catch (SQLException e) {
			e.printStackTrace(); // 오류 출력
		}

		return list; // 최종 고객 리스트 반환
	}

	// 고객 정보 수정 메서드
	public void update(Customer customer) {
		String sql = "UPDATE CUSTOMER SET name=?, phone=?, email=?, address=?, signup_date=TO_DATE(?, 'YYYY-MM-DD') WHERE customer_id=?";

		try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
			// ?에 순서대로 값 세팅
			ps.setString(1, customer.getName());
			ps.setString(2, customer.getPhone());
			ps.setString(3, customer.getEmail());
			ps.setString(4, customer.getAddress());
			ps.setString(5, customer.getSignupDate());
			ps.setInt(6, customer.getCustomerId());

			ps.executeUpdate(); // 쿼리 실행 (UPDATE)
		} catch (SQLException e) {
			e.printStackTrace(); // 오류 출력
		}
	}

	// 고객 삭제 메서드
	public void delete(int customerId) {
		String sql = "DELETE FROM CUSTOMER WHERE customer_id=?";

		try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
			ps.setInt(1, customerId); // 삭제할 고객 ID 지정
			ps.executeUpdate(); // 쿼리 실행 (DELETE)
		} catch (SQLException e) {
			e.printStackTrace(); // 오류 출력
		}
	}
}
