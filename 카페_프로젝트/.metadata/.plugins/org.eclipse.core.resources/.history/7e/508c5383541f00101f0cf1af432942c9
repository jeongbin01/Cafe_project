package com.Cafe.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Date;             // java.sql.Date import
import java.util.List;
import java.util.ArrayList;

import com.Cafe.model.Customer;    // DTO 클래스

public class CustomerDAO {
    private final String url = "jdbc:oracle:thin:@localhost:1521:xe";
    private final String user = "C##Cafe_Website";
    private final String password = "1234";

    // 1) 모든 고객 조회
    public List<Customer> getAllCustomers() {
        List<Customer> customerList = new ArrayList<>();
        String sql = "SELECT * FROM CUSTOMER";

        try (
            Connection conn = getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery()
        ) {
            while (rs.next()) {
                Customer customer = new Customer(
                );
                customerList.add(customer);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return customerList;
    }

    // 2) ID로 고객 조회
    public Customer getCustomerById(int customerId) {
        String sql = "SELECT * FROM CUSTOMER WHERE customer_id = ?";

        try (
            Connection conn = getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql)
        ) {
            pstmt.setInt(1, customerId);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    return new Customer(
                    );
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    // 3) 새 고객 등록
    public boolean insertCustomer(Customer customer) {
        String sql = "INSERT INTO CUSTOMER (customer_id, name, phone, email, address, signup_date) "
                   + "VALUES (?, ?, ?, ?, ?, ?)";

        try (
            Connection conn = getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql)
        ) {
            pstmt.setInt(1, customer.getCustomerId());
            pstmt.setString(2, customer.getName());
            pstmt.setString(3, customer.getPhone());
            pstmt.setString(4, customer.getEmail());
            pstmt.setString(5, customer.getAddress());
            pstmt.setDate(6, customer.getSignupDate());  // java.sql.Date

            return pstmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // 4) 고객 정보 수정
    public boolean updateCustomer(Customer customer) {
        String sql = "UPDATE CUSTOMER SET name = ?, phone = ?, email = ?, address = ? "
                   + "WHERE customer_id = ?";

        try (
            Connection conn = getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql)
        ) {
            pstmt.setString(1, customer.getName());
            pstmt.setString(2, customer.getPhone());
            pstmt.setString(3, customer.getEmail());
            pstmt.setString(4, customer.getAddress());
            pstmt.setInt(5, customer.getCustomerId());

            return pstmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // 5) 고객 삭제
    public boolean deleteCustomer(int customerId) {
        String sql = "DELETE FROM CUSTOMER WHERE customer_id = ?";

        try (
            Connection conn = getConnection();
            PreparedStatement pstmt = conn.prepareStatement(sql)
        ) {
            pstmt.setInt(1, customerId);
            return pstmt.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // 공통: Connection 생성 메서드
    private Connection getConnection() throws SQLException {
        // Oracle JDBC 드라이버 클래스 로드 (JDBC 4.0 이후엔 생략 가능)
        // Class.forName("oracle.jdbc.driver.OracleDriver");
        return DriverManager.getConnection(url, user, password);
    }
}
