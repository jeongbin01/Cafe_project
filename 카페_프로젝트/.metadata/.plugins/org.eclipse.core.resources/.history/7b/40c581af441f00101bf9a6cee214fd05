package com.Cafe.Controller;

import java.sql.Date;
import java.util.List;
import java.util.Scanner;
import com.Cafe.dao.CustomerDAO;
import com.Cafe.model.Customer;

public class CustomerController {

	private final CustomerDAO dao = new CustomerDAO();
	private final Scanner sc = new Scanner(System.in);

	public void run() {
		while (true) {
			System.out.println("\n=== 고객 관리 ===");
			System.out.println("1. 전체 조회 | 2. 등록 | 3. 수정 | 4. 삭제 | 0. 뒤로가기");
			System.out.print("선택: ");
			String input = sc.nextLine();
			int menu;
			try {
				menu = Integer.parseInt(input);
			} catch (NumberFormatException e) {
				System.out.println("숫자를 입력해주세요.");
				continue;
			}
			switch (menu) {
			case 1 -> listAll();
			case 2 -> addCustomer();
			case 3 -> editCustomer();
			case 4 -> removeCustomer();
			case 0 -> {
				return;
			}
			default -> System.out.println("잘못된 선택입니다.");
			}
		}
	}

	private void listAll() {
		List<Customer> list = dao.getAllCustomers();
		if (list.isEmpty()) {
			System.out.println("등록된 고객이 없습니다.");
		} else {
			list.forEach(System.out::println);
		}
	}

	private void addCustomer() {
		try {
			System.out.print("ID: ");
			int customerId = Integer.parseInt(sc.nextLine()); // ← 수정된 부분
			System.out.print("이름: ");
			String name = sc.nextLine();
			System.out.print("전화번호: ");
			String phone = sc.nextLine();
			System.out.print("이메일: ");
			String email = sc.nextLine();
			System.out.print("주소: ");
			String address = sc.nextLine();
			System.out.println("가입일 (기본값: 현재 날짜)");
			String signupDate = sc.nextLine();

			Customer customer = new Customer(customerId, name, phone, email, address, signupDate);
			dao.insertCustomer(null);
			System.out.println("등록되었습니다.");
		} catch (NumberFormatException e) {
			System.out.println("ID는 숫자로 입력해야 합니다.");
		} catch (Exception e) {
			System.out.println("등록 중 오류 발생: " + e.getMessage());
		}
	}

	private void editCustomer() {
		System.out.print("수정할 고객 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		Customer customer = dao.getCustomerById(id);
		if (customer == null) {
			System.out.println("해당 고객이 존재하지 않습니다.");
			return;
		}
		System.out.print("새 이름 (현재: " + customer.getName() + "): ");
		String name = sc.nextLine();
		if (!name.isBlank())
			customer.setName(name);
		System.out.print("새 전화번호 (현재: " + customer.getPhone() + "): ");
		String phone = sc.nextLine();
		if (!phone.isBlank())
			customer.setPhone(phone);
		System.out.print("새 이메일 (현재: " + customer.getEmail() + "): ");
		String email = sc.nextLine();
		if (!email.isBlank())
			customer.setEmail(email);
		System.out.print("새 주소 (현재: " + customer.getAddress() + "): ");
		String address = sc.nextLine();
		if (!address.isBlank())
			customer.setAddress(address);
		dao.updateCustomer(customer);
		System.out.println("수정되었습니다.");
	}

	private void removeCustomer() {
		System.out.print("삭제할 고객 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		dao.deleteCustomer(id);
		System.out.println("삭제되었습니다.");
	}
}