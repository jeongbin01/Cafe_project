package com.Cafe.Controller;

import java.util.List;
import java.util.Scanner;

import com.Cafe.dao.CoffeeBeansDAO;
import com.Cafe.model.COFFEE_BEANS;

public class CoffeeBeansController {
	private final CoffeeBeansDAO dao = new CoffeeBeansDAO();
	private final Scanner sc = new Scanner(System.in);

	public void run() {
		while (true) {
			System.out.println("\n=== 커피 원두 관리 ===");
			System.out.println("1. 전체 조회 | 2. 등록 | 3. 수정 | 4. 삭제 | 0. 뒤로가기");
			System.out.print("선택: ");
			int menu = Integer.parseInt(sc.nextLine());
			switch (menu) {
			case 1 -> listAll();
			case 2 -> addBean();
			case 3 -> editBean();
			case 4 -> removeBean();
			case 0 -> {
				return;
			}
			default -> System.out.println("잘못된 선택입니다.");
			}
		}
	}

	private void listAll() {
		List<COFFEE_BEANS> list = dao.getAllCoffeeBeans();
		list.forEach(System.out::println);
	}

	private void addBean() {
		System.out.print("ID: ");
		int id = Integer.parseInt(sc.nextLine());
		System.out.print("이름: ");
		String name = sc.nextLine();
		System.out.print("로스팅: ");
		String roasting = sc.nextLine();
		System.out.print("풍미: ");
		String flavorNotes = sc.nextLine();
		System.out.print("특징: ");
		String characteristics = sc.nextLine();
		System.out.print("가격대: ");
		String priceRange = sc.nextLine();
		System.out.print("추천 로스터리: ");
		String recommendedRoasteries = sc.nextLine();

		COFFEE_BEANS bean = new COFFEE_BEANS(id, name, roasting, flavorNotes, characteristics, priceRange,
				recommendedRoasteries);
		dao.insertCoffeeBean(bean);
		System.out.println("등록되었습니다.");
	}

	private void editBean() {
		System.out.print("수정할 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		COFFEE_BEANS bean = dao.getCoffeeBeanById(id);
		if (bean == null) {
			System.out.println("해당 ID가 존재하지 않습니다.");
			return;
		}
		System.out.print("새 이름 (현재: " + bean.getName() + "): ");
		String name = sc.nextLine();
		if (!name.isEmpty())
			bean.setName(name);
		System.out.print("새 로스팅 (현재: " + bean.getRoasting() + "): ");
		String roasting = sc.nextLine();
		if (!roasting.isEmpty())
			bean.setRoasting(roasting);
		// ... 나머지 필드도 동일하게 처리
		dao.updateCoffeeBean(bean);
		System.out.println("수정되었습니다.");
	}

	private void removeBean() {
		System.out.print("삭제할 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		dao.deleteCoffeeBean(id);
		System.out.println("삭제되었습니다.");
	}
}
