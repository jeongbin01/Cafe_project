package com.Cafe.Controller;

import java.util.List;
import java.util.Scanner;

import com.Cafe.dao.CustomerDAO;
import com.Cafe.model.Customer;

public class CustomerController {
	private final CustomerDAO dao = new CustomerDAO();
	private final Scanner sc = new Scanner(System.in);

	public void run() {
		while (true) {
			System.out.println("\n=== 고객 관리 ===");
			System.out.println("1. 전체 조회 | 2. 등록 | 3. 수정 | 4. 삭제 | 0. 뒤로가기");
			System.out.print("선택: ");
			int menu;
			try {
				menu = Integer.parseInt(sc.nextLine());
			} catch (NumberFormatException e) {
				System.out.println("숫자를 입력해주세요.");
				continue;
			}
			switch (menu) {
			case 1 -> listAll();
			case 2 -> addCustomerInteractive();
			case 3 -> editCustomerInteractive();
			case 4 -> deleteCustomerInteractive();
			case 0 -> {
				return;
			}
			default -> System.out.println("잘못된 선택입니다.");
			}
		}
	}

	private void listAll() {
		List<Customer> list = dao.getAllCustomers();
		if (list.isEmpty()) {
			System.out.println("등록된 고객이 없습니다.");
		} else {
			list.forEach(System.out::println);
		}
	}

	private void addCustomerInteractive() {
		System.out.print("ID (0 입력 시 시퀀스 자동): ");
		int id = Integer.parseInt(sc.nextLine());
		System.out.print("이름: ");
		String name = sc.nextLine();
		System.out.print("전화번호 (010-1234-5678): ");
		String phone = sc.nextLine();
		System.out.print("이메일: ");
		String email = sc.nextLine();
		System.out.print("주소: ");
		String address = sc.nextLine();
		System.out.print("가입일(YYYY-MM-DD)(생략 시 오늘): ");
		String signupDate = sc.nextLine();

		Customer c = new Customer(id, name, phone, email, address, signupDate.isBlank() ? null : signupDate);
		boolean ok = dao.insertCustomer(c);
		System.out.println(ok ? "등록되었습니다." : "등록 실패 (입력값을 확인해주세요)");
	}

	private void editCustomerInteractive() {
		System.out.print("수정할 고객 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		Customer c = dao.getCustomerById(id);
		if (c == null) {
			System.out.println("해당 ID의 고객이 없습니다.");
			return;
		}
		System.out.print("새 이름 (현재: " + c.getName() + ") : ");
		String name = sc.nextLine();
		if (!name.isBlank())
			c.setName(name);

		System.out.print("새 전화번호 (현재: " + c.getPhone() + ") : ");
		String phone = sc.nextLine();
		if (!phone.isBlank())
			c.setPhone(phone);

		System.out.print("새 이메일 (현재: " + c.getEmail() + ") : ");
		String email = sc.nextLine();
		if (!email.isBlank())
			c.setEmail(email);

		System.out.print("새 주소 (현재: " + c.getAddress() + ") : ");
		String address = sc.nextLine();
		if (!address.isBlank())
			c.setAddress(address);

		System.out.print("새 가입일 (YYYY-MM-DD, 현재: " + c.getSignupDate() + ") : ");
		String signupDate = sc.nextLine();
		if (!signupDate.isBlank())
			c.setSignupDate(signupDate);

		boolean ok = dao.updateCustomer(c);
		System.out.println(ok ? "수정되었습니다." : "수정 실패 (입력값 또는 존재 여부를 확인해주세요)");
	}

	private void deleteCustomerInteractive() {
		System.out.print("삭제할 고객 ID: ");
		int id = Integer.parseInt(sc.nextLine());
		boolean ok = dao.deleteCustomer(id);
		System.out.println(ok ? "삭제되었습니다." : "삭제 실패 (존재 여부를 확인해주세요)");
	}
}
